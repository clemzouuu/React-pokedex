{"ast":null,"code":"var _jsxFileName = \"/Users/clemzouuu/Desktop/Code/React-pokedex/react-pokemon-app/src/components/pokemon-card.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './pokemon-card.css';\nimport './helpers/format-date.ts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PokemonCard = _ref => {\n  _s();\n\n  let {\n    pokemon,\n    borderColor = '#009688'\n  } = _ref;\n  const [color, setColor] = useState();\n\n  const showBorder = () => {\n    setColor(borderColor);\n  };\n\n  const hideBorder = () => {\n    setColor('#f5f5f5');\n  };\n\n  const formatType = type => {\n    let color;\n\n    switch (type) {\n      case 'Feu':\n        color = 'red lighten-1';\n        break;\n\n      case 'Eau':\n        color = 'blue lighten-1';\n        break;\n\n      case 'Plante':\n        color = 'green lighten-1';\n        break;\n\n      case 'Insecte':\n        color = 'brown lighten-1';\n        break;\n\n      case 'Normal':\n        color = 'grey lighten-3';\n        break;\n\n      case 'Vol':\n        color = 'blue lighten-3';\n        break;\n\n      case 'Poison':\n        color = 'deep-purple accent-1';\n        break;\n\n      case 'Fée':\n        color = 'pink lighten-4';\n        break;\n\n      case 'Psy':\n        color = 'deep-purple darken-2';\n        break;\n\n      case 'Electrik':\n        color = 'lime accent-1';\n        break;\n\n      case 'Combat':\n        color = 'deep-orange';\n        break;\n\n      default:\n        color = 'grey';\n        break;\n    }\n\n    return `chip ${color}`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col s6 m4\",\n    onMouseEnter: showBorder,\n    onMouseLeave: hideBorder,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card horizontal\",\n      style: {\n        borderColor: color\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: pokemon.picture,\n          alt: pokemon.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-stacked\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: pokemon.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"small\", {\n              children: formatDate(pokemon.created)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), pokemon.types.map(type => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: formatType(type),\n            children: type\n          }, type, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PokemonCard, \"82MkoYdCpCBLe6G9QQs4gyc+awE=\");\n\n_c = PokemonCard;\nexport default PokemonCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonCard\");","map":{"version":3,"sources":["/Users/clemzouuu/Desktop/Code/React-pokedex/react-pokemon-app/src/components/pokemon-card.tsx"],"names":["React","useState","PokemonCard","pokemon","borderColor","color","setColor","showBorder","hideBorder","formatType","type","picture","name","formatDate","created","types","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAmCC,QAAnC,QAAmD,OAAnD;AAEA,OAAO,oBAAP;AACA,OAAO,0BAAP;;;AAOA,MAAMC,WAAqC,GAAG,QAAyC;AAAA;;AAAA,MAAxC;AAACC,IAAAA,OAAD;AAAUC,IAAAA,WAAW,GAAG;AAAxB,GAAwC;AAEnF,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,EAAlC;;AAEA,QAAMM,UAAU,GAAG,MAAM;AACrBD,IAAAA,QAAQ,CAACF,WAAD,CAAR;AACH,GAFD;;AAIA,QAAMI,UAAU,GAAG,MAAM;AACrBF,IAAAA,QAAQ,CAAC,SAAD,CAAR;AACH,GAFD;;AAIA,QAAMG,UAAU,GAAIC,IAAD,IAA0B;AAC3C,QAAIL,KAAJ;;AAEA,YAAQK,IAAR;AACE,WAAK,KAAL;AACEL,QAAAA,KAAK,GAAG,eAAR;AACA;;AACF,WAAK,KAAL;AACEA,QAAAA,KAAK,GAAG,gBAAR;AACA;;AACF,WAAK,QAAL;AACEA,QAAAA,KAAK,GAAG,iBAAR;AACA;;AACF,WAAK,SAAL;AACEA,QAAAA,KAAK,GAAG,iBAAR;AACA;;AACF,WAAK,QAAL;AACEA,QAAAA,KAAK,GAAG,gBAAR;AACA;;AACF,WAAK,KAAL;AACEA,QAAAA,KAAK,GAAG,gBAAR;AACA;;AACF,WAAK,QAAL;AACEA,QAAAA,KAAK,GAAG,sBAAR;AACA;;AACF,WAAK,KAAL;AACEA,QAAAA,KAAK,GAAG,gBAAR;AACA;;AACF,WAAK,KAAL;AACEA,QAAAA,KAAK,GAAG,sBAAR;AACA;;AACF,WAAK,UAAL;AACEA,QAAAA,KAAK,GAAG,eAAR;AACA;;AACF,WAAK,QAAL;AACEA,QAAAA,KAAK,GAAG,aAAR;AACA;;AACF;AACEA,QAAAA,KAAK,GAAG,MAAR;AACA;AApCJ;;AAuCA,WAAQ,QAAOA,KAAM,EAArB;AACD,GA3CD;;AA8CF,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,YAAY,EAAEE,UAAzC;AAAqD,IAAA,YAAY,EAAEC,UAAnE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAiC,MAAA,KAAK,EAAE;AAACJ,QAAAA,WAAW,EAAGC;AAAf,OAAxC;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACE;AAAK,UAAA,GAAG,EAAEF,OAAO,CAACQ,OAAlB;AAA2B,UAAA,GAAG,EAAER,OAAO,CAACS;AAAxC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACE;AAAA,sBAAIT,OAAO,CAACS;AAAZ;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,mCAAG;AAAA,wBAAQC,UAAU,CAACV,OAAO,CAACW,OAAT;AAAlB;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,kBAFF,EAGGX,OAAO,CAACY,KAAR,CAAcC,GAAd,CAAkBN,IAAI,iBACnB;AAAiB,YAAA,SAAS,EAAED,UAAU,CAACC,IAAD,CAAtC;AAAA,sBAA+CA;AAA/C,aAAWA,IAAX;AAAA;AAAA;AAAA;AAAA,kBADH,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA5ED;;GAAMR,W;;KAAAA,W;AA8EN,eAAeA,WAAf","sourcesContent":["import React, { FunctionComponent, useState } from 'react';\nimport Pokemon from '../models/pokemon';\nimport './pokemon-card.css'\nimport './helpers/format-date.ts'\n  \ntype Props = {\n  pokemon: Pokemon\n  borderColor?: string // ? = Prop facultative\n};\n  \nconst PokemonCard: FunctionComponent<Props> = ({pokemon, borderColor = '#009688' }) => {\n\n    const [color, setColor] = useState<string>()\n\n    const showBorder = () => {\n        setColor(borderColor)\n    }\n\n    const hideBorder = () => {\n        setColor('#f5f5f5')\n    }\n\n    const formatType = (type: string): string => {\n      let color: string;\n     \n      switch (type) {\n        case 'Feu': \n          color = 'red lighten-1'; \n          break; \n        case 'Eau': \n          color = 'blue lighten-1'; \n          break; \n        case 'Plante': \n          color = 'green lighten-1'; \n          break; \n        case 'Insecte': \n          color = 'brown lighten-1'; \n          break; \n        case 'Normal': \n          color = 'grey lighten-3'; \n          break; \n        case 'Vol': \n          color = 'blue lighten-3'; \n          break; \n        case 'Poison': \n          color = 'deep-purple accent-1'; \n          break; \n        case 'Fée': \n          color = 'pink lighten-4'; \n          break; \n        case 'Psy': \n          color = 'deep-purple darken-2'; \n          break; \n        case 'Electrik': \n          color = 'lime accent-1'; \n          break; \n        case 'Combat': \n          color = 'deep-orange'; \n          break; \n        default: \n          color = 'grey'; \n          break; \n      }\n     \n      return `chip ${color}`;\n    }\n\n\n  return (\n    <div className=\"col s6 m4\" onMouseEnter={showBorder} onMouseLeave={hideBorder}>\n      <div className=\"card horizontal\" style={{borderColor : color}}>\n        <div className=\"card-image\"> \n          <img src={pokemon.picture} alt={pokemon.name}/>\n        </div>\n        <div className=\"card-stacked\">\n          <div className=\"card-content\">\n            <p>{pokemon.name}</p>\n            <p><small>{formatDate(pokemon.created)}</small></p>\n            {pokemon.types.map(type => (\n                <span key={type} className={formatType(type)}>{type}</span>\n            ))}\n          </div>\n        </div>\n      </div> \n    </div>\n  );\n}\n  \nexport default PokemonCard;\n"]},"metadata":{},"sourceType":"module"}