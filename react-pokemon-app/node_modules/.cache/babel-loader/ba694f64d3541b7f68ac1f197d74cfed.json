{"ast":null,"code":"var _jsxFileName = \"/Users/clemzouuu/Desktop/Code/react/react-pokemon-app/src/App.tsx\",\n    _s = $RefreshSig$();\n\n// 1er Composant qui apparait à l'écran\nimport React, { useState, useEffect } from 'react'; // On importe react, on rajoute (le hook d'état) useState et le hook d'effet\n\nimport POKEMONS from './models/mock-pokemon'; // On type le composant App ave React.FC (Composant peut être fonction ou classe)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // FunctionCompenent = composant écrit avec une fonction \n  const [pokemons, setPokemons] = useState([]); // On utilise un State au lieu d'une const avec useState // <> = Typage des données pour TypeScript\n  // Tableau vide en 2eme arg, revient au 1er état du cycle de vie du hook \n  // etat actuel +                // useState prend en arg l'état initial du composant\n  //  fonction pour modifier la valeur de l'état      \n\n  useEffect(() => {\n    setPokemons(POKEMONS);\n  }, []); // Tableau pour continuer à mettre à j l'affichage, état 1 et 2 du hook\n  // Méthodes liée à un événement du DOM\n\n  const showPokemonsCount = () => {\n    console.log(pokemons.length);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"center\",\n      children: \"Pok\\xE9dex\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: showPokemonsCount,\n          children: \" pok\\xE9mons dans le Pok\\xE9dex.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), pokemons.map(_ref => {\n          let {\n            id,\n            name,\n            picture,\n            created\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col s6 m4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card horizontal\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-image\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: picture,\n                  alt: name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 31,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-stacked\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-content\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 35,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: created.toString()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 36,\n                      columnNumber: 24\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 36,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 17\n            }, this)\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"mczcIla7rt/rZo7CXFYbda6ZoMU=\");\n\n_c = App;\nexport default App; // Exporter le composant pour l'utiliser ailleurs dans l'app\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/clemzouuu/Desktop/Code/react/react-pokemon-app/src/App.tsx"],"names":["React","useState","useEffect","POKEMONS","App","pokemons","setPokemons","showPokemonsCount","console","log","length","map","id","name","picture","created","toString"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgCC,QAAhC,EAAyCC,SAAzC,QAAyD,OAAzD,C,CAAkE;;AAElE,OAAOC,QAAP,MAAqB,uBAArB,C,CAEA;;;;AACA,MAAMC,GAAsB,GAAG,MAAM;AAAA;;AAAE;AACtC,QAAK,CAACC,QAAD,EAAUC,WAAV,IAAyBL,QAAQ,CAAY,EAAZ,CAAtC,CADoC,CACkB;AACC;AACxD;AACA;;AACCC,EAAAA,SAAS,CAAC,MAAK;AACXI,IAAAA,WAAW,CAACH,QAAD,CAAX;AACH,GAFQ,EAEP,EAFO,CAAT,CALoC,CAO7B;AAER;;AACA,QAAMI,iBAAiB,GAAG,MAAK;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACK,MAArB;AACH,GAFD;;AAIC,sBACC;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACI;AAAG,UAAA,OAAO,EAAIH,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEKF,QAAQ,CAACM,GAAT,CAAa;AAAA,cAAC;AAACC,YAAAA,EAAD;AAAIC,YAAAA,IAAJ;AAASC,YAAAA,OAAT;AAAiBC,YAAAA;AAAjB,WAAD;AAAA,8BACd;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,mCACI;AAAK,cAAA,SAAS,EAAC,iBAAf;AAAA,sCACI;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,uCACI;AAAK,kBAAA,GAAG,EAAED,OAAV;AAAmB,kBAAA,GAAG,EAAID;AAA1B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBADJ,eAII;AAAK,gBAAA,SAAS,EAAC,cAAf;AAAA,uCACA;AAAK,kBAAA,SAAS,EAAC,cAAf;AAAA,0CACA;AAAA,8BAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,0BADA,eAEA;AAAA,2CAAG;AAAA,gCAAQE,OAAO,CAACC,QAAR;AAAR;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,0BAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,sBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,aAAgCJ,EAAhC;AAAA;AAAA;AAAA;AAAA,kBADc;AAAA,SAAb,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAyBA,CAvCD;;GAAMR,G;;KAAAA,G;AAyCN,eAAeA,GAAf,C,CAAoB","sourcesContent":["// 1er Composant qui apparait à l'écran\nimport React,{FunctionComponent,useState,useEffect} from 'react'; // On importe react, on rajoute (le hook d'état) useState et le hook d'effet\nimport Pokemon from './models/pokemon';\nimport POKEMONS from './models/mock-pokemon';\n\n// On type le composant App ave React.FC (Composant peut être fonction ou classe)\nconst App: FunctionComponent = () => { // FunctionCompenent = composant écrit avec une fonction \n const[pokemons,setPokemons] = useState<Pokemon[]>([]) // On utilise un State au lieu d'une const avec useState // <> = Typage des données pour TypeScript\n                                                        // Tableau vide en 2eme arg, revient au 1er état du cycle de vie du hook \n// etat actuel +                // useState prend en arg l'état initial du composant\n//  fonction pour modifier la valeur de l'état      \n useEffect(()=> {\n     setPokemons(POKEMONS);\n },[]); // Tableau pour continuer à mettre à j l'affichage, état 1 et 2 du hook\n\n// Méthodes liée à un événement du DOM\nconst showPokemonsCount = () =>{\n    console.log(pokemons.length)\n}\n \n return ( \n  <div>\n      <h1 className=\"center\">Pokédex</h1>\n      <div className=\"container\">\n        <div className=\"row\">\n            <p onClick = {showPokemonsCount}> pokémons dans le Pokédex.</p>\n            {pokemons.map(({id,name,picture,created})=> (\n            <div className=\"col s6 m4\" key={id}>\n                <div className=\"card horizontal\">\n                    <div className=\"card-image\">\n                        <img src={picture} alt = {name}/>\n                    </div>\n                    <div className=\"card-stacked\">\n                    <div className=\"card-content\">\n                    <p>{name}</p>\n                    <p><small>{created.toString()}</small></p>\n                </div>\n                </div>\n            </div>\n            </div>\n        ))}\n        </div>\n         </div>\n  </div>\n )  \n}\n  \nexport default App; // Exporter le composant pour l'utiliser ailleurs dans l'app\n"]},"metadata":{},"sourceType":"module"}