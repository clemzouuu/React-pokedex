{"ast":null,"code":"var _jsxFileName = \"/Users/clemzouuu/Desktop/Code/react/react-pokemon-app/src/App.tsx\",\n    _s = $RefreshSig$();\n\n// 1er Composant qui apparait à l'écran\nimport React, { useState, useEffect } from 'react'; // On rajoute useState et le hook d'effet\n\nimport POKEMONS from './models/mock-pokemon'; // On type le composant App ave React.FC (Composant peut être fonction ou classe)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // FC = FunctionCompenent\n  const [pokemons, setPokemons] = useState([]); // On utilise un State au lieu d'une const avec useState // <> = Typage pour TypeScript\n\n  useEffect(() => {\n    setPokemons(POKEMONS);\n  }, []);\n\n  const showPokemonsCount = () => {\n    console.log(pokemons.length);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pok\\xE9dex\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Il y a \", pokemons.length, \" pok\\xE9mons dans le Pok\\xE9dex.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"mczcIla7rt/rZo7CXFYbda6ZoMU=\");\n\n_c = App;\nexport default App; // Exporter le composant pour l'utiliser ailleurs dans l'app\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/clemzouuu/Desktop/Code/react/react-pokemon-app/src/App.tsx"],"names":["React","useState","useEffect","POKEMONS","App","pokemons","setPokemons","showPokemonsCount","console","log","length"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgCC,QAAhC,EAAyCC,SAAzC,QAAyD,OAAzD,C,CAAkE;;AAElE,OAAOC,QAAP,MAAqB,uBAArB,C,CAEA;;;;AACA,MAAMC,GAAsB,GAAG,MAAM;AAAA;;AAAE;AACtC,QAAK,CAACC,QAAD,EAAUC,WAAV,IAAyBL,QAAQ,CAAY,EAAZ,CAAtC,CADoC,CACkB;;AAEtDC,EAAAA,SAAS,CAAC,MAAK;AACXI,IAAAA,WAAW,CAACH,QAAD,CAAX;AACH,GAFQ,EAEP,EAFO,CAAT;;AAGD,QAAMI,iBAAiB,GAAG,MAAK;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACK,MAArB;AACH,GAFD;;AAKC,sBACC;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,4BAAWL,QAAQ,CAACK,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAMA,CAjBD;;GAAMN,G;;KAAAA,G;AAmBN,eAAeA,GAAf,C,CAAoB","sourcesContent":["// 1er Composant qui apparait à l'écran\nimport React,{FunctionComponent,useState,useEffect} from 'react'; // On rajoute useState et le hook d'effet\nimport Pokemon from './models/pokemon';\nimport POKEMONS from './models/mock-pokemon';\n\n// On type le composant App ave React.FC (Composant peut être fonction ou classe)\nconst App: FunctionComponent = () => { // FC = FunctionCompenent\n const[pokemons,setPokemons] = useState<Pokemon[]>([]) // On utilise un State au lieu d'une const avec useState // <> = Typage pour TypeScript\n    \n useEffect(()=> {\n     setPokemons(POKEMONS);\n },[]);\nconst showPokemonsCount = () =>{\n    console.log(pokemons.length)\n} \n\n\n return ( \n  <div>\n      <h1>Pokédex</h1>\n      <p>Il y a {pokemons.length} pokémons dans le Pokédex.</p>\n  </div>\n )  \n}\n  \nexport default App; // Exporter le composant pour l'utiliser ailleurs dans l'app\n"]},"metadata":{},"sourceType":"module"}